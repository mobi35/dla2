@model List<Teacher>
@{
    ViewData["Title"] = "Teacher";
    Layout = "~/Views/Shared/adminLayout.cshtml";
}



<style>


    /*the container must be positioned relative:*/
    .autocomplete {
        position: relative;
        display: inline-block;
    }

    input {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 10px;
        font-size: 16px;
    }

        input[type=text] {
            background-color: #f1f1f1;
            width: 100%;
        }

        input[type=submit] {
            background-color: DodgerBlue;
            color: #fff;
            cursor: pointer;
        }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            /*when hovering an item:*/
            .autocomplete-items div:hover {
                background-color: #e9e9e9;
            }

    /*when navigating through the items using the arrow keys:*/
    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>


<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="teacherUpdate" enctype="multipart/form-data">
                <div class="modal-header">

                    <button class="btn" type="button" data-dismiss="modal" aria-hidden="true">Close</button>
                </div>
                <div class="modal-body">
                    
                    <small style="color:red">Choose the autocomplete</small><br />
                    <input type="hidden" id="edit_skill_id" />
                    <div class="autocomplete form-group">
                        <label>Subject 1</label>
                        <input autocomplete="off" id="e_skill1" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="e_skill1_v" style="color:red;"></small>
                    </div>

                    <div class="autocomplete form-group">
                        <label>Subject 2</label>
                        <input autocomplete="off" id="e_skill2" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="e_skill1_v" style="color:red;"></small>
                    </div>

                    <div class="autocomplete form-group">
                        <label>Subject 3</label>
                        <input autocomplete="off" id="e_skill3" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="e_skill1_v" style="color:red;"></small>
                    </div>

                    <div class="autocomplete form-group">
                        <label>Subject 4</label>
                        <input autocomplete="off" id="e_skill4" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="e_skill1_v" style="color:red;"></small>
                    </div>




                  

                </div>
                <div class="modal-footer">
                    <div class="left-side">
                        <button type="button" class="btn btn-default btn-simple" data-dismiss="modal">Cancel</button>
                    </div>
                    <div class="divider"></div>
                    <div class="right-side">
                        <input id="register_student" type="submit" class="btn btn-danger btn-simple" />
                    </div>
                </div>

            </form>

        </div>
    </div>
</div>










<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="teacherRegistration" enctype="multipart/form-data">
                <div class="modal-header">

                    <button class="btn" type="button" data-dismiss="modal" aria-hidden="true">Close</button>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label>Email</label>
                        <input id="email" type="text" class="form-control" />
                        <small id="email_v" style="color:red;"></small>
                    </div>


                    <div class="form-group">
                        <label>Password</label>
                        <input id="password" type="password" class="form-control" />
                        <small id="password_v" style="color:red;"></small>
                    </div>


                    <div class="form-group">
                        <label>Repeat Password</label>
                        <input id="rpassword" type="password" class="form-control" />
                        <small id="rpassword_v" style="color:red;"></small>
                    </div>


                    <div class="form-group">
                        <label>First Name</label>
                        <input id="fname" type="text" class="form-control" />
                        <small id="fname_v" style="color:red;"></small>
                    </div>

                    <div class="form-group">
                        <label>Middle Name</label>
                        <input id="mname" type="text" class="form-control" />
                        <small id="mname_v" style="color:red;"></small>
                    </div>

                    <div class="form-group">
                        <label>Last Name</label>
                        <input id="lname" type="text" class="form-control" />
                        <small id="lname_v" style="color:red;"></small>
                    </div>

                    <div class="form-group">
                     
                        <input id="address" type="hidden" value="address" class="form-control" />
                        <small id="address_v" style="color:red;"></small>
                    </div>

                    <div class="form-group">
                        <input id="bdate" value="December 2, 1995"  type="hidden" class="form-control" />
                        <small id="bdate_v" style="color:red;"></small>
                    </div>

                    <div class="form-group">
                        <label>Level</label>
                        <select class="form-control" id="level">
                            <option>Teacher</option>
                            <option>Registrar</option>
                            <option>Admin</option>

                        </select>
                    </div>
                    <small style="color:red">Choose the autocomplete</small><br />
                    <div class="autocomplete form-group">
                        <label>Subject 1</label>
                        <input autocomplete="off" id="skill1" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="skill1_v" style="color:red;"></small>
                    </div>

                    <div class="autocomplete form-group">
                        <label>Subject 2</label>
                        <input autocomplete="off" id="skill2" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="skill1_v" style="color:red;"></small>
                    </div>

                    <div class="autocomplete form-group">
                        <label>Subject 3</label>
                        <input autocomplete="off" id="skill3" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="skill1_v" style="color:red;"></small>
                    </div>

                    <div class="autocomplete form-group">
                        <label>Subject 4</label>
                        <input autocomplete="off" id="skill4" type="text" name="myCountry" class="form-control" placeholder="">
                        <small id="skill1_v" style="color:red;"></small>
                    </div>


                    <div class="form-group">
                       
                        <input type="hidden"  id="genderMale" value="Male" />
                       
                        <small style="color:red;"></small>
                    </div>

                    <label>Employee Image</label>
                    <input class="form-control" id="image" type="file" />
                    <small id="image_v" style="color:red;"></small>
                    <div class="form-group">


                    </div>

                </div>
                <div class="modal-footer">
                    <div class="left-side">
                        <button type="button" class="btn btn-default btn-simple" data-dismiss="modal">Cancel</button>
                    </div>
                    <div class="divider"></div>
                    <div class="right-side">
                        <input id="register_student" onclick="return confirm('Please check the data before proceeding.')" type="submit" class="btn btn-danger btn-simple" />
                    </div>
                </div>

            </form>

        </div>
    </div>
</div>

<button class="btn btn-neutral" data-toggle="modal" data-target="#myModal">
    Add Employee
</button>


<style>

    .buttons-print {
        border: none !important;
        background-color: #51cbce !important;
    }

    .buttons-excel {
        border: none !important;
        background-color: #51cbce !important;
    }

    .buttons-pdf {
        border: none !important;
        background-color: #51cbce !important;
    }
</style>

<div style="width: 100%; " class="content">
    <div class="row">
        <div class="col-md-12">
            <div style="padding:2%;" class="card">
                <table class="table table-striped table-bordered" style=" width:100%;" id="userList">
                    <thead>
                        <tr>

                            <th style="color:#51cbce;">Full Name</th>
                            <th style="color:#51cbce;">Skills</th>
                            <th style="color:#51cbce;">User Level</th>
                            <th style="color:#51cbce;">Action </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var m in Model)
                            {
                                <tr>

                                    <td>@m.FirstName @m.MiddleName @m.LastName</td>
                                    <td>@m.Skills</td>
                                    <td>@m.UserLevel</td>
                                    <td>
                                        @{
                                            if (m.UserLevel == "Teacher")
                                            {
                                                <button onclick="GetUpdate('@m.TeacherID')" class="btn btn-neutral" data-toggle="modal" data-target="#editModal">
                                                    Edit
                                                </button>
                                            }

                                        }


                                    </td>

                                </tr>
                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    function GetUpdate(id) {

        $('#e_skill1').val('');
        $('#e_skill2').val('');
        $('#e_skill3').val('');
        $('#e_skill4' ).val('');
        $('#edit_skill_id').val(id);
        $.ajax({

            url: '/User/GetEmployee',
            type: 'GET',
            data: { id: id },
            success: function (e) {

                var arr = e.split(',');

                   $('#e_skill1').val(arr[0]);
                   $('#e_skill2').val(arr[1]);
                   $('#e_skill3').val(arr[2]);
                   $('#e_skill4').val(arr[3]);

            
            }

        });
    }

    $('#level').change(function () {

        if ($(this).val() != "Teacher") {
            $('#skill1').attr("readonly", true);
            $('#skill2').attr("readonly", true);
            $('#skill3').attr("readonly", true);
            $('#skill4').attr("readonly", true);
        } else {
            $('#skill1').attr("readonly", false);
            $('#skill2').attr("readonly", false);
            $('#skill3').attr("readonly", false);
            $('#skill4').attr("readonly", false);
        }

    });


    document.getElementById('teacherRegistration').onsubmit = function () {

        var student = new FormData();

        var gender = "";
        if ($('#genderMale').is(':checked')) {
            gender = "male";
        } else {
            gender = "female";
        }

        var fileInput = document.getElementById('image');
        for (i = 0; i < fileInput.files.length; i++) {
            student.append("Image", fileInput.files[i]);
        }
        var email = $('#email').val();
        var fname = $('#fname').val();
        var mname = $('#mname').val();
        var lname = $('#lname').val();
        var password = $('#password').val();
        var rpassword = $('#rpassword').val();
        var address = $('#address').val();
        var bdate = $('#bdate').val();
        var skill1 = $('#skill1').val();
        var skill2 = $('#skill2').val();
        var level = $('#level').val();
        var skill3 = $('#skill3').val();
        var skill4 = $('#skill4').val();

        var skill = skill1;
        if (skill2 != "") {
            skill += "," + skill2;
        }
        if (skill3 != "") {
            skill += "," + skill3;
        }

        if (skill4 != "") {
            skill += "," + skill4;
        }

        var skillList = skill.split(",").sort();

        for (var i = 0; i < skillList.length - 1; i++) {
            if (skillList[i + 1] == skillList[i]) {
                alert("there is a duplicate skill");
                return false;
            }
        }



        if (level == "Teacher" && skill1 == "") {
            alert("Please complete the fields");
            return false;
        }

        if (fname == "" || mname == "" || lname == "" || address == "" || bdate == "" || password == "" || rpassword == "") {
            alert("Please complete the fields");
            return false;
        }

        student.append("FirstName", fname);
        student.append("MiddleName", mname);
        student.append("LastName", lname);
        student.append("Address", address);
        student.append("Password", password);
        student.append("ConfirmPassword", rpassword);
        student.append("BirthDate", bdate);
        student.append("Gender", gender);
        student.append("Skills", skill);
        student.append("UserLevel", level);
        student.append("Email", email);
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/User/CreateTeacher');
        xhr.send(student);

        xhr.onreadystatechange = function () {


            if (xhr.readyState == 4 && xhr.status == 200) {

                if (xhr.responseText == "email_exist") {
                    alert("This email is already existed");
                    return false;
                }
                else if (xhr.responseText == "no_subject") {
                    alert("Subject Error. Please choose the subject in auto complete form");
                    return false;
                }

                if (xhr.responseText == "") {
                    alert("employee added");
                    window.open("../../User/Teacher", "_self");
                }
            }
        }

        return false;

    }






     document.getElementById('teacherUpdate').onsubmit = function () {

        var student = new FormData();

      

        var userid = $('#edit_skill_id').val();
        var skill1 = $('#e_skill1').val();
        var skill2 = $('#e_skill2').val();
        var skill3 = $('#e_skill3').val();
        var skill4 = $('#e_skill4').val();

        var skill = skill1;
        if (skill2 != "") {
            skill += "," + skill2;
        }
        if (skill3 != "") {
            skill += "," + skill3;
        }

        if (skill4 != "") {
            skill += "," + skill4;
        }


        var skillList = skill.split(",").sort();

        for (var i = 0; i < skillList.length - 1; i++) {
            if (skillList[i + 1] == skillList[i]) {
                alert("there is a duplicate skill");
                return false;
            }
        }



        if (skill1 == "") {
            alert("Please complete the fields");
            return false;
        }

        student.append("Skills", skill);
         student.append("TeacherID", userid);

        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/User/UpdateTeacher');
        xhr.send(student);

        xhr.onreadystatechange = function () {


            if (xhr.readyState == 4 && xhr.status == 200) {


                if (xhr.responseText == "") {
                    alert("employee updated");
                    window.open("../../User/Teacher", "_self");
                }
            }
        }

        return false;

    }

</script>


<script>
    $('#teachernav').addClass('active');


    $(document).ready(function () {
        $('#userList').DataTable({

            responsive: true,

            "lengthMenu": [50, 100, 500, 1000, 2000, 5000, 10000, 50000, 100000],
            "order": [],
            "sScrollX": "100%",
            "scrollCollapse": true,
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'print',

                    customize: function (win) {
                        $(win.document.body)
                            .css({ 'font-size': '10pt' })
                            .prepend(
                                '<img style= src="~/Images/activefinancelogo.png"  style="position:absolute; height:500px; z-index:5000; width:500px; top:0; left:0;" />'
                            );

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }, 'excelHtml5', {
                    extend: 'pdf',
                    download: 'open',
                }
            ]

        });
    });

</script>

<script src="~/DataTables-1.10.18/js/jquery.dataTables.js"></script>
<script src="~/DataTables-1.10.18/js/dataTables.buttons.min.js"></script>
<script src="~/DataTables-1.10.18/js/buttons.print.min.js"></script>

<script src="~/DataTables-1.10.18/js/pdfmake.min.js"></script>
<script src="~/DataTables-1.10.18/js/vfs_fonts.js"></script>
<script src="~/DataTables-1.10.18/js/buttons.html5.min.js"></script>
<script src="~/DataTables-1.10.18/js/jszip.min.js"></script>
<script src="~/DataTables-1.10.18/js/dataTables.responsive.min.js"></script>
<script src="~/DataTables-1.10.18/js/responsive.bootstrap4.min.js"></script>

<link href="~/DataTables-1.10.18/css/responsive.bootstrap4.min.css" rel="stylesheet" />
<link href="~/DataTables-1.10.18/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/DataTables-1.10.18/css/button.css" rel="stylesheet" />
<script src="~/DataTables-1.10.18/js/dataTables.bootstrap4.js"></script>




<script>

    var subjects = [];

    function autocomplete(inp, arr) {
        /*the autocomplete function takes two arguments,
        the text field element and an array of possible autocompleted values:*/
        var currentFocus;
        /*execute a function when someone writes in the text field:*/
        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            if (!val) { return false; }
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
                /*check if the item starts with the same letters as the text field value:*/
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {
                        /*insert the value for the autocomplete text field:*/
                        inp.value = this.getElementsByTagName("input")[0].value;
                        /*close the list of autocompleted values,
                        (or any other open lists of autocompleted values:*/
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });
        /*execute a function presses a key on the keyboard:*/
        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {
                /*If the arrow DOWN key is pressed,
                increase the currentFocus variable:*/
                currentFocus++;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 38) { //up
                /*If the arrow UP key is pressed,
                decrease the currentFocus variable:*/
                currentFocus--;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 13) {
                /*If the ENTER key is pressed, prevent the form from being submitted,*/
                e.preventDefault();
                if (currentFocus > -1) {
                    /*and simulate a click on the "active" item:*/
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            /*a function to classify an item as "active":*/
            if (!x) return false;
            /*start by removing the "active" class on all items:*/
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            /*add class "autocomplete-active":*/
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            /*a function to remove the "active" class from all autocomplete items:*/
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            /*close all autocomplete lists in the document,
            except the one passed as an argument:*/
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
        /*execute a function when someone clicks in the document:*/
        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
    }



    /*An array containing all the country names in the world:*/






    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {

            subjects = JSON.parse(xhttp.responseText);
            autocomplete(document.getElementById("skill1"), subjects);
            autocomplete(document.getElementById("skill2"), subjects);
            autocomplete(document.getElementById("skill3"), subjects);
            autocomplete(document.getElementById("skill4"), subjects);


               autocomplete(document.getElementById("e_skill1"), subjects);
            autocomplete(document.getElementById("e_skill2"), subjects);
            autocomplete(document.getElementById("e_skill3"), subjects);
            autocomplete(document.getElementById("e_skill4"), subjects);

        }



    };

    xhttp.open("GET", "../User/GetSubject", true);
    xhttp.send();







    $('#skill1').change(function () {



    });



</script>